<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
    <entry key="node_file" type="xstring" value="settings.xml"/>
    <config key="flow_stack"/>
    <config key="internal_node_subsettings">
        <entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
    </config>
    <config key="model">
        <entry key="script" type="xstring" value="import knime.scripting.io as knio%%00010import pandas as pd%%00010import numpy as np%%00010%%00010# These are the node's outputs that need to be populated:%%00010reemplazo = knio.input_tables[0].to_pandas()%%00010binner3 = knio.input_tables[0].to_pandas()%%00010binner2 = knio.input_tables[0].to_pandas()%%00010binner1 = knio.input_tables[0].to_pandas()%%00010%%00010# BINNER 1%%00010num_bins = 5%%00010# Use qcut() function to create equal-sized bins and display range labels%%00010binner1['binner'] = pd.qcut(binner1['EDAD'], q=num_bins, labels=False, precision=0)%%00010bin_ranges = pd.qcut(binner1['EDAD'], q=num_bins, labels=False, precision=0, duplicates='drop', retbins=True)[1]%%00010binner1['binner'] = pd.cut(binner1['EDAD'], bins=bin_ranges, labels=[f'{int(left)}-{int(right)}' for left, right in zip(bin_ranges[:-1], bin_ranges[1:])])%%00010%%00010# BINNER 2%%00010bin_ranges = [-np.inf,40,70,np.inf]%%00010%%00010# Use cut() function with custom labels to create bins and display range labels%%00010binner2['binner'] = pd.cut(binner2['EDAD'], bins=bin_ranges, labels=[f'{left}-{right}' for left, right in zip(bin_ranges[:-1], bin_ranges[1:])])%%00010# Print the binned data%%00010%%00010#BINNER 3%%00010%%00010bin_width = 10%%00010%%00010%%00010min_value = binner3['EDAD'].min()%%00010max_value = binner3['EDAD'].max()%%00010num_bins3 = int((max_value - min_value) / bin_width)%%00010bin_edges = [min_value + i * bin_width for i in range(num_bins + 1)]%%00010%%00010# Use cut() function with custom labels to create bins and display range labels%%00010binner3['binner'] = pd.cut(binner3['EDAD'], bins=bin_edges, labels=[f'{left}-{right}' for left, right in zip(bin_edges[:-1], bin_edges[1:])])%%00010%%00010print(binner3)%%00010knio.output_tables[0] = knio.Table.from_pandas(binner1)%%00010knio.output_tables[1] =  knio.Table.from_pandas(binner2)%%00010knio.output_tables[2] =  knio.Table.from_pandas(binner3)%%00010"/>
        <entry key="python3_command" type="xstring" value=""/>
    </config>
    <entry key="customDescription" type="xstring" isnull="true" value=""/>
    <entry key="state" type="xstring" value="EXECUTED"/>
    <entry key="factory" type="xstring" value="org.knime.python3.scripting.nodes.script.PythonScriptNodeFactory"/>
    <entry key="node-name" type="xstring" value="Python Script"/>
    <entry key="node-bundle-name" type="xstring" value="KNIME Python 3 - Scripting Nodes"/>
    <entry key="node-bundle-symbolic-name" type="xstring" value="org.knime.python3.scripting.nodes"/>
    <entry key="node-bundle-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
    <entry key="node-bundle-version" type="xstring" value="4.7.1.v202301311311"/>
    <entry key="node-feature-name" type="xstring" value="KNIME Python Integration"/>
    <entry key="node-feature-symbolic-name" type="xstring" value="org.knime.features.python3.scripting.feature.group"/>
    <entry key="node-feature-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
    <entry key="node-feature-version" type="xstring" value="4.7.2.v202303231026"/>
    <config key="factory_settings"/>
    <config key="node_creation_config">
        <config key="Input object (pickled)"/>
        <config key="Input table">
            <config key="port_0">
                <entry key="object_class" type="xstring" value="org.knime.core.node.BufferedDataTable"/>
            </config>
        </config>
        <config key="Output table">
            <config key="port_0">
                <entry key="object_class" type="xstring" value="org.knime.core.node.BufferedDataTable"/>
            </config>
            <config key="port_1">
                <entry key="object_class" type="xstring" value="org.knime.core.node.BufferedDataTable"/>
            </config>
            <config key="port_2">
                <entry key="object_class" type="xstring" value="org.knime.core.node.BufferedDataTable"/>
            </config>
        </config>
        <config key="Output image"/>
        <config key="Output object (pickled)"/>
    </config>
    <entry key="name" type="xstring" value="Python Script"/>
    <entry key="hasContent" type="xboolean" value="true"/>
    <entry key="isInactive" type="xboolean" value="false"/>
    <config key="ports">
        <config key="port_1">
            <entry key="index" type="xint" value="1"/>
            <entry key="port_spec_class" type="xstring" value="org.knime.core.data.DataTableSpec"/>
            <entry key="port_object_class" type="xstring" value="org.knime.core.node.BufferedDataTable"/>
            <entry key="port_object_summary" type="xstring" value="Rows: 11117, Cols: 33"/>
            <entry key="port_dir_location" type="xstring" value="port_1"/>
        </config>
        <config key="port_2">
            <entry key="index" type="xint" value="2"/>
            <entry key="port_spec_class" type="xstring" value="org.knime.core.data.DataTableSpec"/>
            <entry key="port_object_class" type="xstring" value="org.knime.core.node.BufferedDataTable"/>
            <entry key="port_object_summary" type="xstring" value="Rows: 11117, Cols: 33"/>
            <entry key="port_dir_location" type="xstring" value="port_2"/>
        </config>
        <config key="port_3">
            <entry key="index" type="xint" value="3"/>
            <entry key="port_spec_class" type="xstring" value="org.knime.core.data.DataTableSpec"/>
            <entry key="port_object_class" type="xstring" value="org.knime.core.node.BufferedDataTable"/>
            <entry key="port_object_summary" type="xstring" value="Rows: 11117, Cols: 33"/>
            <entry key="port_dir_location" type="xstring" value="port_3"/>
        </config>
    </config>
    <config key="filestores">
        <entry key="file_store_location" type="xstring" isnull="true" value=""/>
        <entry key="file_store_id" type="xstring" value="98f45442-b025-482b-83a3-305b93e263f8"/>
    </config>
</config>
